import numpy as np
import pandas as pd
import pytest


@pytest.fixture
def transactions_dummy_df():
    transactions_dict = {
        "t_dat": {
            0: "2020-04-16",
            1: "2020-04-30",
            2: "2020-05-05",
            3: "2020-05-11",
            4: "2020-05-14",
            5: "2020-05-25",
            6: "2020-06-02",
            7: "2020-06-08",
            8: "2020-06-13",
            9: "2020-06-15",
            10: "2020-06-27",
            11: "2020-07-02",
            12: "2020-07-11",
            13: "2020-07-20",
            14: "2020-07-22",
            15: "2020-07-30",
            16: "2020-07-31",
            17: "2020-08-27",
            18: "2020-09-10",
            19: "2020-09-11",
        },
        "customer_id": {
            0: "764b8665ae1a26235988a6b7044f5fea5ecdc663b003c6793e244abb3a05c60b",
            1: "552627c91af0ea53bf8f3a487ab1c98c138cc6aa8f725aa658ec2e9ef27edcb7",
            2: "12a774cd3087f92c962a2ab3ecb25823af90fad713de30315fe422e10e4540f7",
            3: "278ef6dddd46310b25f527474d816187e04870ef035213cc0cef874e06dde994",
            4: "2369b0e9d31c8176a755cdae2c0a54e74618d569e8ba2709ba162404f6f6a8e4",
            5: "12a774cd3087f92c962a2ab3ecb25823af90fad713de30315fe422e10e4540f7",
            6: "764b8665ae1a26235988a6b7044f5fea5ecdc663b003c6793e244abb3a05c60b",
            7: "b42fab593033e8b8a5bb69f1d574881bc974e637671db542635f941b5fc27f01",
            8: "552627c91af0ea53bf8f3a487ab1c98c138cc6aa8f725aa658ec2e9ef27edcb7",
            9: "49b680b60e75819b1ad6e640edaf5f8679d0bda521d9ced5d9063cbacb122441",
            10: "716d31c400d20613322bf8a2ddfc621604ea9756c054de47e8220d2ad94f5e78",
            11: "12a774cd3087f92c962a2ab3ecb25823af90fad713de30315fe422e10e4540f7",
            12: "20854b2caee0e89f3916a3fe32a298751b357f84da10422e474da063b396c756",
            13: "552627c91af0ea53bf8f3a487ab1c98c138cc6aa8f725aa658ec2e9ef27edcb7",
            14: "4c5e9f28a6a074b76194355a3a43a41f28d3c40b6e7d2058c990e9e1f2845099",
            15: "22e200a42983b3423d56a9f6132474e83524156abeeebe2d1d78ad9d8fecf32f",
            16: "7ccd1c972798457a721116c9af16d3baed4065dfb78b13d1c39f1b0bafc23352",
            17: "12a774cd3087f92c962a2ab3ecb25823af90fad713de30315fe422e10e4540f7",
            18: "764b8665ae1a26235988a6b7044f5fea5ecdc663b003c6793e244abb3a05c60b",
            19: "12a774cd3087f92c962a2ab3ecb25823af90fad713de30315fe422e10e4540f7",
        },
        "article_id": {
            0: "0821057001",
            1: "0783346024",
            2: "0858992001",
            3: "0685606010",
            4: "0820960003",
            5: "0547780025",
            6: "0502660002",
            7: "0874676003",
            8: "0744934007",
            9: "0875899001",
            10: "0875469005",
            11: "0458239022",
            12: "0570319054",
            13: "0851094002",
            14: "0776237020",
            15: "0921226002",
            16: "0732429003",
            17: "0865444002",
            18: "0831282001",
            19: "0860620002",
        },
        "price": {
            0: 0.033881355,
            1: 0.022864407,
            2: 0.045745764,
            3: 0.02879661,
            4: 0.013542373,
            5: 0.02540678,
            6: 0.021711864,
            7: 0.02540678,
            8: 0.016932203,
            9: 0.015237289,
            10: 0.008457627,
            11: 0.02201695,
            12: 0.02201695,
            13: 0.02201695,
            14: 0.02540678,
            15: 0.016932203,
            16: 0.015237289,
            17: 0.030491525,
            18: 0.029440679,
            19: 0.024915254,
        },
        "sales_channel_id": {
            0: 2,
            1: 2,
            2: 2,
            3: 2,
            4: 2,
            5: 2,
            6: 2,
            7: 2,
            8: 2,
            9: 2,
            10: 2,
            11: 2,
            12: 1,
            13: 2,
            14: 2,
            15: 1,
            16: 2,
            17: 2,
            18: 1,
            19: 2,
        },
    }
    df = pd.DataFrame(transactions_dict)
    return df


@pytest.fixture
def candidates_dummy_df():
    candidates_dict = {
        "customer_id": {
            0: "0d1a47760911611b4c5ac7d33df54003659933c307a5ef3d65e0bba2ba7d77d5",
            1: "4faa82eaaa6db4f2265651700370c9161e445703bd8d6771f219d08e9fec27f4",
            2: "8b9d95062f01a3466a0a71de0f974ff3a082924c9551bfe3b1a9f3ccb6dbe393",
            3: "a0006a00a5917966bd2ba60b8991fa25b643f1f0cd4d273d0785646e1017fb8d",
            4: "ad34c941ebcd1db25f65504f4a95640e105df3f6b8829aca929aedb8f95d0ca0",
        },
        "global_articles": {
            0: np.array(
                [
                    "0554479001",
                    "0904571001",
                    "0869331006",
                    "0902528006",
                    "0852775004",
                    "0698276009",
                    "0884319009",
                    "0832481002",
                    "0688728023",
                    "0158340001",
                    "0706016015",
                ],
                dtype=object,
            ),
            1: np.array(
                [
                    "0554479001",
                    "0904571001",
                    "0869331006",
                    "0902528006",
                    "0852775004",
                    "0698276009",
                    "0884319009",
                    "0832481002",
                    "0688728023",
                    "0158340001",
                    "0706016015",
                ],
                dtype=object,
            ),
            2: np.array(
                [
                    "0554479001",
                    "0904571001",
                    "0869331006",
                    "0902528006",
                    "0852775004",
                    "0698276009",
                    "0884319009",
                    "0832481002",
                    "0688728023",
                    "0158340001",
                    "0706016015",
                ],
                dtype=object,
            ),
            3: np.array(
                [
                    "0554479001",
                    "0904571001",
                    "0869331006",
                    "0902528006",
                    "0852775004",
                    "0698276009",
                    "0884319009",
                    "0832481002",
                    "0688728023",
                    "0158340001",
                    "0706016015",
                ],
                dtype=object,
            ),
            4: np.array(
                [
                    "0554479001",
                    "0904571001",
                    "0869331006",
                    "0902528006",
                    "0852775004",
                    "0698276009",
                    "0884319009",
                    "0832481002",
                    "0688728023",
                    "0158340001",
                    "0706016015",
                ],
                dtype=object,
            ),
        },
        "segment_articles": {
            0: np.array(
                [
                    "0904571001",
                    "0869331006",
                    "0792469001",
                    "0902528006",
                    "0852775004",
                    "0698276009",
                    "0758002011",
                    "0928040002",
                    "0832481002",
                    "0688728023",
                    "0158340001",
                ],
                dtype=object,
            ),
            1: np.array(
                [
                    "0904571001",
                    "0869331006",
                    "0792469001",
                    "0902528006",
                    "0852775004",
                    "0698276009",
                    "0758002011",
                    "0928040002",
                    "0832481002",
                    "0688728023",
                    "0158340001",
                ],
                dtype=object,
            ),
            2: np.array(
                [
                    "0678942058",
                    "0895423005",
                    "0904571001",
                    "0902528006",
                    "0301656029",
                    "0851780001",
                    "0884319009",
                    "0698276009",
                    "0751471027",
                    "0832481002",
                    "0922381002",
                ],
                dtype=object,
            ),
            3: np.array(
                [
                    "0678942058",
                    "0664074039",
                    "0768921001",
                    "0904571001",
                    "0848420007",
                    "0554479001",
                    "0776237019",
                    "0869331006",
                    "0792469001",
                    "0903790001",
                    "0698276009",
                ],
                dtype=object,
            ),
            4: np.array(
                [
                    "0678942058",
                    "0895423005",
                    "0904571001",
                    "0902528006",
                    "0301656029",
                    "0851780001",
                    "0884319009",
                    "0698276009",
                    "0751471027",
                    "0832481002",
                    "0922381002",
                ],
                dtype=object,
            ),
        },
        "previously_bought": {
            0: None,
            1: np.array(
                ["0606395030", "0850871002", "0860819001", "0773049001", "0712924016"],
                dtype=object,
            ),
            2: None,
            3: None,
            4: None,
        },
        "previously_bought_prod_name": {
            0: None,
            1: np.array(
                [
                    "0850871003",
                    "0850871001",
                    "0850871002",
                    "0773049001",
                    "0860819001",
                    "0606395030",
                    "0712924016",
                ],
                dtype=object,
            ),
            2: None,
            3: None,
            4: None,
        },
        "closest_image_embeddings": {
            0: None,
            1: np.array(
                [
                    "0568478014",
                    "0785822001",
                    "0752432002",
                    "0903381002",
                    "0875736003",
                    "0683770001",
                    "0575347009",
                    "0775150001",
                    "0672625005",
                    "0775505002",
                    "0769269001",
                    "0775405001",
                    "0656868003",
                    "0657276002",
                    "0603145009",
                    "0744717001",
                    "0737994002",
                    "0679484003",
                    "0711297006",
                    "0681381009",
                ],
                dtype=object,
            ),
            2: None,
            3: None,
            4: None,
        },
        "closest_text_embeddings": {
            0: None,
            1: np.array(
                [
                    "0712924003",
                    "0712924012",
                    "0712924008",
                    "0712924001",
                    "0712924006",
                    "0860819002",
                    "0823505002",
                    "0823505001",
                    "0582480001",
                    "0828556001",
                    "0759139002",
                    "0872514001",
                    "0841668001",
                    "0850871001",
                    "0850871003",
                    "0880123001",
                    "0736190001",
                    "0606395003",
                    "0606395011",
                    "0606395014",
                    "0606395001",
                    "0606395006",
                ],
                dtype=object,
            ),
            2: None,
            3: None,
            4: None,
        },
    }
    df = pd.DataFrame(candidates_dict)
    return df


@pytest.fixture
def long_candidates_dummy_df():
    long_candidates_dict = {
        "customer_id": {
            0: "0d1a47760911611b4c5ac7d33df54003659933c307a5ef3d65e0bba2ba7d77d5",
            1: "0d1a47760911611b4c5ac7d33df54003659933c307a5ef3d65e0bba2ba7d77d5",
            2: "0d1a47760911611b4c5ac7d33df54003659933c307a5ef3d65e0bba2ba7d77d5",
            3: "0d1a47760911611b4c5ac7d33df54003659933c307a5ef3d65e0bba2ba7d77d5",
            4: "0d1a47760911611b4c5ac7d33df54003659933c307a5ef3d65e0bba2ba7d77d5",
            5: "0d1a47760911611b4c5ac7d33df54003659933c307a5ef3d65e0bba2ba7d77d5",
            6: "0d1a47760911611b4c5ac7d33df54003659933c307a5ef3d65e0bba2ba7d77d5",
            7: "0d1a47760911611b4c5ac7d33df54003659933c307a5ef3d65e0bba2ba7d77d5",
            8: "0d1a47760911611b4c5ac7d33df54003659933c307a5ef3d65e0bba2ba7d77d5",
            9: "0d1a47760911611b4c5ac7d33df54003659933c307a5ef3d65e0bba2ba7d77d5",
            10: "0d1a47760911611b4c5ac7d33df54003659933c307a5ef3d65e0bba2ba7d77d5",
            11: "4faa82eaaa6db4f2265651700370c9161e445703bd8d6771f219d08e9fec27f4",
            12: "4faa82eaaa6db4f2265651700370c9161e445703bd8d6771f219d08e9fec27f4",
            13: "4faa82eaaa6db4f2265651700370c9161e445703bd8d6771f219d08e9fec27f4",
            14: "4faa82eaaa6db4f2265651700370c9161e445703bd8d6771f219d08e9fec27f4",
            15: "4faa82eaaa6db4f2265651700370c9161e445703bd8d6771f219d08e9fec27f4",
            16: "4faa82eaaa6db4f2265651700370c9161e445703bd8d6771f219d08e9fec27f4",
            17: "4faa82eaaa6db4f2265651700370c9161e445703bd8d6771f219d08e9fec27f4",
            18: "4faa82eaaa6db4f2265651700370c9161e445703bd8d6771f219d08e9fec27f4",
            19: "4faa82eaaa6db4f2265651700370c9161e445703bd8d6771f219d08e9fec27f4",
            20: "4faa82eaaa6db4f2265651700370c9161e445703bd8d6771f219d08e9fec27f4",
            21: "4faa82eaaa6db4f2265651700370c9161e445703bd8d6771f219d08e9fec27f4",
            22: "8b9d95062f01a3466a0a71de0f974ff3a082924c9551bfe3b1a9f3ccb6dbe393",
            23: "8b9d95062f01a3466a0a71de0f974ff3a082924c9551bfe3b1a9f3ccb6dbe393",
            24: "8b9d95062f01a3466a0a71de0f974ff3a082924c9551bfe3b1a9f3ccb6dbe393",
            25: "8b9d95062f01a3466a0a71de0f974ff3a082924c9551bfe3b1a9f3ccb6dbe393",
            26: "8b9d95062f01a3466a0a71de0f974ff3a082924c9551bfe3b1a9f3ccb6dbe393",
            27: "8b9d95062f01a3466a0a71de0f974ff3a082924c9551bfe3b1a9f3ccb6dbe393",
            28: "8b9d95062f01a3466a0a71de0f974ff3a082924c9551bfe3b1a9f3ccb6dbe393",
            29: "8b9d95062f01a3466a0a71de0f974ff3a082924c9551bfe3b1a9f3ccb6dbe393",
            30: "8b9d95062f01a3466a0a71de0f974ff3a082924c9551bfe3b1a9f3ccb6dbe393",
            31: "8b9d95062f01a3466a0a71de0f974ff3a082924c9551bfe3b1a9f3ccb6dbe393",
            32: "8b9d95062f01a3466a0a71de0f974ff3a082924c9551bfe3b1a9f3ccb6dbe393",
            33: "a0006a00a5917966bd2ba60b8991fa25b643f1f0cd4d273d0785646e1017fb8d",
            34: "a0006a00a5917966bd2ba60b8991fa25b643f1f0cd4d273d0785646e1017fb8d",
            35: "a0006a00a5917966bd2ba60b8991fa25b643f1f0cd4d273d0785646e1017fb8d",
            36: "a0006a00a5917966bd2ba60b8991fa25b643f1f0cd4d273d0785646e1017fb8d",
            37: "a0006a00a5917966bd2ba60b8991fa25b643f1f0cd4d273d0785646e1017fb8d",
            38: "a0006a00a5917966bd2ba60b8991fa25b643f1f0cd4d273d0785646e1017fb8d",
            39: "a0006a00a5917966bd2ba60b8991fa25b643f1f0cd4d273d0785646e1017fb8d",
            40: "a0006a00a5917966bd2ba60b8991fa25b643f1f0cd4d273d0785646e1017fb8d",
            41: "a0006a00a5917966bd2ba60b8991fa25b643f1f0cd4d273d0785646e1017fb8d",
            42: "a0006a00a5917966bd2ba60b8991fa25b643f1f0cd4d273d0785646e1017fb8d",
            43: "a0006a00a5917966bd2ba60b8991fa25b643f1f0cd4d273d0785646e1017fb8d",
            44: "ad34c941ebcd1db25f65504f4a95640e105df3f6b8829aca929aedb8f95d0ca0",
            45: "ad34c941ebcd1db25f65504f4a95640e105df3f6b8829aca929aedb8f95d0ca0",
            46: "ad34c941ebcd1db25f65504f4a95640e105df3f6b8829aca929aedb8f95d0ca0",
            47: "ad34c941ebcd1db25f65504f4a95640e105df3f6b8829aca929aedb8f95d0ca0",
            48: "ad34c941ebcd1db25f65504f4a95640e105df3f6b8829aca929aedb8f95d0ca0",
            49: "ad34c941ebcd1db25f65504f4a95640e105df3f6b8829aca929aedb8f95d0ca0",
            50: "ad34c941ebcd1db25f65504f4a95640e105df3f6b8829aca929aedb8f95d0ca0",
            51: "ad34c941ebcd1db25f65504f4a95640e105df3f6b8829aca929aedb8f95d0ca0",
            52: "ad34c941ebcd1db25f65504f4a95640e105df3f6b8829aca929aedb8f95d0ca0",
            53: "ad34c941ebcd1db25f65504f4a95640e105df3f6b8829aca929aedb8f95d0ca0",
            54: "ad34c941ebcd1db25f65504f4a95640e105df3f6b8829aca929aedb8f95d0ca0",
            55: "0d1a47760911611b4c5ac7d33df54003659933c307a5ef3d65e0bba2ba7d77d5",
            56: "0d1a47760911611b4c5ac7d33df54003659933c307a5ef3d65e0bba2ba7d77d5",
            57: "0d1a47760911611b4c5ac7d33df54003659933c307a5ef3d65e0bba2ba7d77d5",
            58: "0d1a47760911611b4c5ac7d33df54003659933c307a5ef3d65e0bba2ba7d77d5",
            59: "0d1a47760911611b4c5ac7d33df54003659933c307a5ef3d65e0bba2ba7d77d5",
            60: "0d1a47760911611b4c5ac7d33df54003659933c307a5ef3d65e0bba2ba7d77d5",
            61: "0d1a47760911611b4c5ac7d33df54003659933c307a5ef3d65e0bba2ba7d77d5",
            62: "0d1a47760911611b4c5ac7d33df54003659933c307a5ef3d65e0bba2ba7d77d5",
            63: "0d1a47760911611b4c5ac7d33df54003659933c307a5ef3d65e0bba2ba7d77d5",
            64: "0d1a47760911611b4c5ac7d33df54003659933c307a5ef3d65e0bba2ba7d77d5",
            65: "0d1a47760911611b4c5ac7d33df54003659933c307a5ef3d65e0bba2ba7d77d5",
            66: "4faa82eaaa6db4f2265651700370c9161e445703bd8d6771f219d08e9fec27f4",
            67: "4faa82eaaa6db4f2265651700370c9161e445703bd8d6771f219d08e9fec27f4",
            68: "4faa82eaaa6db4f2265651700370c9161e445703bd8d6771f219d08e9fec27f4",
            69: "4faa82eaaa6db4f2265651700370c9161e445703bd8d6771f219d08e9fec27f4",
            70: "4faa82eaaa6db4f2265651700370c9161e445703bd8d6771f219d08e9fec27f4",
            71: "4faa82eaaa6db4f2265651700370c9161e445703bd8d6771f219d08e9fec27f4",
            72: "4faa82eaaa6db4f2265651700370c9161e445703bd8d6771f219d08e9fec27f4",
            73: "4faa82eaaa6db4f2265651700370c9161e445703bd8d6771f219d08e9fec27f4",
            74: "4faa82eaaa6db4f2265651700370c9161e445703bd8d6771f219d08e9fec27f4",
            75: "4faa82eaaa6db4f2265651700370c9161e445703bd8d6771f219d08e9fec27f4",
            76: "4faa82eaaa6db4f2265651700370c9161e445703bd8d6771f219d08e9fec27f4",
            77: "8b9d95062f01a3466a0a71de0f974ff3a082924c9551bfe3b1a9f3ccb6dbe393",
            78: "8b9d95062f01a3466a0a71de0f974ff3a082924c9551bfe3b1a9f3ccb6dbe393",
            79: "8b9d95062f01a3466a0a71de0f974ff3a082924c9551bfe3b1a9f3ccb6dbe393",
            80: "8b9d95062f01a3466a0a71de0f974ff3a082924c9551bfe3b1a9f3ccb6dbe393",
            81: "8b9d95062f01a3466a0a71de0f974ff3a082924c9551bfe3b1a9f3ccb6dbe393",
            82: "8b9d95062f01a3466a0a71de0f974ff3a082924c9551bfe3b1a9f3ccb6dbe393",
            83: "8b9d95062f01a3466a0a71de0f974ff3a082924c9551bfe3b1a9f3ccb6dbe393",
            84: "8b9d95062f01a3466a0a71de0f974ff3a082924c9551bfe3b1a9f3ccb6dbe393",
            85: "8b9d95062f01a3466a0a71de0f974ff3a082924c9551bfe3b1a9f3ccb6dbe393",
            86: "8b9d95062f01a3466a0a71de0f974ff3a082924c9551bfe3b1a9f3ccb6dbe393",
            87: "8b9d95062f01a3466a0a71de0f974ff3a082924c9551bfe3b1a9f3ccb6dbe393",
            88: "a0006a00a5917966bd2ba60b8991fa25b643f1f0cd4d273d0785646e1017fb8d",
            89: "a0006a00a5917966bd2ba60b8991fa25b643f1f0cd4d273d0785646e1017fb8d",
            90: "a0006a00a5917966bd2ba60b8991fa25b643f1f0cd4d273d0785646e1017fb8d",
            91: "a0006a00a5917966bd2ba60b8991fa25b643f1f0cd4d273d0785646e1017fb8d",
            92: "a0006a00a5917966bd2ba60b8991fa25b643f1f0cd4d273d0785646e1017fb8d",
            93: "a0006a00a5917966bd2ba60b8991fa25b643f1f0cd4d273d0785646e1017fb8d",
            94: "a0006a00a5917966bd2ba60b8991fa25b643f1f0cd4d273d0785646e1017fb8d",
            95: "a0006a00a5917966bd2ba60b8991fa25b643f1f0cd4d273d0785646e1017fb8d",
            96: "a0006a00a5917966bd2ba60b8991fa25b643f1f0cd4d273d0785646e1017fb8d",
            97: "a0006a00a5917966bd2ba60b8991fa25b643f1f0cd4d273d0785646e1017fb8d",
            98: "a0006a00a5917966bd2ba60b8991fa25b643f1f0cd4d273d0785646e1017fb8d",
            99: "ad34c941ebcd1db25f65504f4a95640e105df3f6b8829aca929aedb8f95d0ca0",
            100: "ad34c941ebcd1db25f65504f4a95640e105df3f6b8829aca929aedb8f95d0ca0",
            101: "ad34c941ebcd1db25f65504f4a95640e105df3f6b8829aca929aedb8f95d0ca0",
            102: "ad34c941ebcd1db25f65504f4a95640e105df3f6b8829aca929aedb8f95d0ca0",
            103: "ad34c941ebcd1db25f65504f4a95640e105df3f6b8829aca929aedb8f95d0ca0",
            104: "ad34c941ebcd1db25f65504f4a95640e105df3f6b8829aca929aedb8f95d0ca0",
            105: "ad34c941ebcd1db25f65504f4a95640e105df3f6b8829aca929aedb8f95d0ca0",
            106: "ad34c941ebcd1db25f65504f4a95640e105df3f6b8829aca929aedb8f95d0ca0",
            107: "ad34c941ebcd1db25f65504f4a95640e105df3f6b8829aca929aedb8f95d0ca0",
            108: "ad34c941ebcd1db25f65504f4a95640e105df3f6b8829aca929aedb8f95d0ca0",
            109: "ad34c941ebcd1db25f65504f4a95640e105df3f6b8829aca929aedb8f95d0ca0",
            110: "4faa82eaaa6db4f2265651700370c9161e445703bd8d6771f219d08e9fec27f4",
            111: "4faa82eaaa6db4f2265651700370c9161e445703bd8d6771f219d08e9fec27f4",
            112: "4faa82eaaa6db4f2265651700370c9161e445703bd8d6771f219d08e9fec27f4",
            113: "4faa82eaaa6db4f2265651700370c9161e445703bd8d6771f219d08e9fec27f4",
            114: "4faa82eaaa6db4f2265651700370c9161e445703bd8d6771f219d08e9fec27f4",
            115: "4faa82eaaa6db4f2265651700370c9161e445703bd8d6771f219d08e9fec27f4",
            116: "4faa82eaaa6db4f2265651700370c9161e445703bd8d6771f219d08e9fec27f4",
            117: "4faa82eaaa6db4f2265651700370c9161e445703bd8d6771f219d08e9fec27f4",
            118: "4faa82eaaa6db4f2265651700370c9161e445703bd8d6771f219d08e9fec27f4",
            119: "4faa82eaaa6db4f2265651700370c9161e445703bd8d6771f219d08e9fec27f4",
            120: "4faa82eaaa6db4f2265651700370c9161e445703bd8d6771f219d08e9fec27f4",
            121: "4faa82eaaa6db4f2265651700370c9161e445703bd8d6771f219d08e9fec27f4",
            122: "4faa82eaaa6db4f2265651700370c9161e445703bd8d6771f219d08e9fec27f4",
            123: "4faa82eaaa6db4f2265651700370c9161e445703bd8d6771f219d08e9fec27f4",
            124: "4faa82eaaa6db4f2265651700370c9161e445703bd8d6771f219d08e9fec27f4",
            125: "4faa82eaaa6db4f2265651700370c9161e445703bd8d6771f219d08e9fec27f4",
            126: "4faa82eaaa6db4f2265651700370c9161e445703bd8d6771f219d08e9fec27f4",
            127: "4faa82eaaa6db4f2265651700370c9161e445703bd8d6771f219d08e9fec27f4",
            128: "4faa82eaaa6db4f2265651700370c9161e445703bd8d6771f219d08e9fec27f4",
            129: "4faa82eaaa6db4f2265651700370c9161e445703bd8d6771f219d08e9fec27f4",
            130: "4faa82eaaa6db4f2265651700370c9161e445703bd8d6771f219d08e9fec27f4",
            131: "4faa82eaaa6db4f2265651700370c9161e445703bd8d6771f219d08e9fec27f4",
            132: "4faa82eaaa6db4f2265651700370c9161e445703bd8d6771f219d08e9fec27f4",
            133: "4faa82eaaa6db4f2265651700370c9161e445703bd8d6771f219d08e9fec27f4",
            134: "4faa82eaaa6db4f2265651700370c9161e445703bd8d6771f219d08e9fec27f4",
            135: "4faa82eaaa6db4f2265651700370c9161e445703bd8d6771f219d08e9fec27f4",
            136: "4faa82eaaa6db4f2265651700370c9161e445703bd8d6771f219d08e9fec27f4",
            137: "4faa82eaaa6db4f2265651700370c9161e445703bd8d6771f219d08e9fec27f4",
            138: "4faa82eaaa6db4f2265651700370c9161e445703bd8d6771f219d08e9fec27f4",
            139: "4faa82eaaa6db4f2265651700370c9161e445703bd8d6771f219d08e9fec27f4",
            140: "4faa82eaaa6db4f2265651700370c9161e445703bd8d6771f219d08e9fec27f4",
            141: "4faa82eaaa6db4f2265651700370c9161e445703bd8d6771f219d08e9fec27f4",
            142: "4faa82eaaa6db4f2265651700370c9161e445703bd8d6771f219d08e9fec27f4",
            143: "4faa82eaaa6db4f2265651700370c9161e445703bd8d6771f219d08e9fec27f4",
            144: "4faa82eaaa6db4f2265651700370c9161e445703bd8d6771f219d08e9fec27f4",
            145: "4faa82eaaa6db4f2265651700370c9161e445703bd8d6771f219d08e9fec27f4",
            146: "4faa82eaaa6db4f2265651700370c9161e445703bd8d6771f219d08e9fec27f4",
            147: "4faa82eaaa6db4f2265651700370c9161e445703bd8d6771f219d08e9fec27f4",
            148: "4faa82eaaa6db4f2265651700370c9161e445703bd8d6771f219d08e9fec27f4",
            149: "4faa82eaaa6db4f2265651700370c9161e445703bd8d6771f219d08e9fec27f4",
            150: "4faa82eaaa6db4f2265651700370c9161e445703bd8d6771f219d08e9fec27f4",
            151: "4faa82eaaa6db4f2265651700370c9161e445703bd8d6771f219d08e9fec27f4",
            152: "4faa82eaaa6db4f2265651700370c9161e445703bd8d6771f219d08e9fec27f4",
            153: "4faa82eaaa6db4f2265651700370c9161e445703bd8d6771f219d08e9fec27f4",
            154: "4faa82eaaa6db4f2265651700370c9161e445703bd8d6771f219d08e9fec27f4",
            155: "4faa82eaaa6db4f2265651700370c9161e445703bd8d6771f219d08e9fec27f4",
            156: "4faa82eaaa6db4f2265651700370c9161e445703bd8d6771f219d08e9fec27f4",
            157: "4faa82eaaa6db4f2265651700370c9161e445703bd8d6771f219d08e9fec27f4",
            158: "4faa82eaaa6db4f2265651700370c9161e445703bd8d6771f219d08e9fec27f4",
            159: "4faa82eaaa6db4f2265651700370c9161e445703bd8d6771f219d08e9fec27f4",
            160: "4faa82eaaa6db4f2265651700370c9161e445703bd8d6771f219d08e9fec27f4",
            161: "4faa82eaaa6db4f2265651700370c9161e445703bd8d6771f219d08e9fec27f4",
            162: "4faa82eaaa6db4f2265651700370c9161e445703bd8d6771f219d08e9fec27f4",
            163: "4faa82eaaa6db4f2265651700370c9161e445703bd8d6771f219d08e9fec27f4",
        },
        "article_id": {
            0: "0554479001",
            1: "0904571001",
            2: "0869331006",
            3: "0902528006",
            4: "0852775004",
            5: "0698276009",
            6: "0884319009",
            7: "0832481002",
            8: "0688728023",
            9: "0158340001",
            10: "0706016015",
            11: "0554479001",
            12: "0904571001",
            13: "0869331006",
            14: "0902528006",
            15: "0852775004",
            16: "0698276009",
            17: "0884319009",
            18: "0832481002",
            19: "0688728023",
            20: "0158340001",
            21: "0706016015",
            22: "0554479001",
            23: "0904571001",
            24: "0869331006",
            25: "0902528006",
            26: "0852775004",
            27: "0698276009",
            28: "0884319009",
            29: "0832481002",
            30: "0688728023",
            31: "0158340001",
            32: "0706016015",
            33: "0554479001",
            34: "0904571001",
            35: "0869331006",
            36: "0902528006",
            37: "0852775004",
            38: "0698276009",
            39: "0884319009",
            40: "0832481002",
            41: "0688728023",
            42: "0158340001",
            43: "0706016015",
            44: "0554479001",
            45: "0904571001",
            46: "0869331006",
            47: "0902528006",
            48: "0852775004",
            49: "0698276009",
            50: "0884319009",
            51: "0832481002",
            52: "0688728023",
            53: "0158340001",
            54: "0706016015",
            55: "0904571001",
            56: "0869331006",
            57: "0792469001",
            58: "0902528006",
            59: "0852775004",
            60: "0698276009",
            61: "0758002011",
            62: "0928040002",
            63: "0832481002",
            64: "0688728023",
            65: "0158340001",
            66: "0904571001",
            67: "0869331006",
            68: "0792469001",
            69: "0902528006",
            70: "0852775004",
            71: "0698276009",
            72: "0758002011",
            73: "0928040002",
            74: "0832481002",
            75: "0688728023",
            76: "0158340001",
            77: "0678942058",
            78: "0895423005",
            79: "0904571001",
            80: "0902528006",
            81: "0301656029",
            82: "0851780001",
            83: "0884319009",
            84: "0698276009",
            85: "0751471027",
            86: "0832481002",
            87: "0922381002",
            88: "0678942058",
            89: "0664074039",
            90: "0768921001",
            91: "0904571001",
            92: "0848420007",
            93: "0554479001",
            94: "0776237019",
            95: "0869331006",
            96: "0792469001",
            97: "0903790001",
            98: "0698276009",
            99: "0678942058",
            100: "0895423005",
            101: "0904571001",
            102: "0902528006",
            103: "0301656029",
            104: "0851780001",
            105: "0884319009",
            106: "0698276009",
            107: "0751471027",
            108: "0832481002",
            109: "0922381002",
            110: "0606395030",
            111: "0850871002",
            112: "0860819001",
            113: "0773049001",
            114: "0712924016",
            115: "0850871003",
            116: "0850871001",
            117: "0850871002",
            118: "0773049001",
            119: "0860819001",
            120: "0606395030",
            121: "0712924016",
            122: "0568478014",
            123: "0785822001",
            124: "0752432002",
            125: "0903381002",
            126: "0875736003",
            127: "0683770001",
            128: "0575347009",
            129: "0775150001",
            130: "0672625005",
            131: "0775505002",
            132: "0769269001",
            133: "0775405001",
            134: "0656868003",
            135: "0657276002",
            136: "0603145009",
            137: "0744717001",
            138: "0737994002",
            139: "0679484003",
            140: "0711297006",
            141: "0681381009",
            142: "0712924003",
            143: "0712924012",
            144: "0712924008",
            145: "0712924001",
            146: "0712924006",
            147: "0860819002",
            148: "0823505002",
            149: "0823505001",
            150: "0582480001",
            151: "0828556001",
            152: "0759139002",
            153: "0872514001",
            154: "0841668001",
            155: "0850871001",
            156: "0850871003",
            157: "0880123001",
            158: "0736190001",
            159: "0606395003",
            160: "0606395011",
            161: "0606395014",
            162: "0606395001",
            163: "0606395006",
        },
        "strategy_name": {
            0: "global_articles",
            1: "global_articles",
            2: "global_articles",
            3: "global_articles",
            4: "global_articles",
            5: "global_articles",
            6: "global_articles",
            7: "global_articles",
            8: "global_articles",
            9: "global_articles",
            10: "global_articles",
            11: "global_articles",
            12: "global_articles",
            13: "global_articles",
            14: "global_articles",
            15: "global_articles",
            16: "global_articles",
            17: "global_articles",
            18: "global_articles",
            19: "global_articles",
            20: "global_articles",
            21: "global_articles",
            22: "global_articles",
            23: "global_articles",
            24: "global_articles",
            25: "global_articles",
            26: "global_articles",
            27: "global_articles",
            28: "global_articles",
            29: "global_articles",
            30: "global_articles",
            31: "global_articles",
            32: "global_articles",
            33: "global_articles",
            34: "global_articles",
            35: "global_articles",
            36: "global_articles",
            37: "global_articles",
            38: "global_articles",
            39: "global_articles",
            40: "global_articles",
            41: "global_articles",
            42: "global_articles",
            43: "global_articles",
            44: "global_articles",
            45: "global_articles",
            46: "global_articles",
            47: "global_articles",
            48: "global_articles",
            49: "global_articles",
            50: "global_articles",
            51: "global_articles",
            52: "global_articles",
            53: "global_articles",
            54: "global_articles",
            55: "segment_articles",
            56: "segment_articles",
            57: "segment_articles",
            58: "segment_articles",
            59: "segment_articles",
            60: "segment_articles",
            61: "segment_articles",
            62: "segment_articles",
            63: "segment_articles",
            64: "segment_articles",
            65: "segment_articles",
            66: "segment_articles",
            67: "segment_articles",
            68: "segment_articles",
            69: "segment_articles",
            70: "segment_articles",
            71: "segment_articles",
            72: "segment_articles",
            73: "segment_articles",
            74: "segment_articles",
            75: "segment_articles",
            76: "segment_articles",
            77: "segment_articles",
            78: "segment_articles",
            79: "segment_articles",
            80: "segment_articles",
            81: "segment_articles",
            82: "segment_articles",
            83: "segment_articles",
            84: "segment_articles",
            85: "segment_articles",
            86: "segment_articles",
            87: "segment_articles",
            88: "segment_articles",
            89: "segment_articles",
            90: "segment_articles",
            91: "segment_articles",
            92: "segment_articles",
            93: "segment_articles",
            94: "segment_articles",
            95: "segment_articles",
            96: "segment_articles",
            97: "segment_articles",
            98: "segment_articles",
            99: "segment_articles",
            100: "segment_articles",
            101: "segment_articles",
            102: "segment_articles",
            103: "segment_articles",
            104: "segment_articles",
            105: "segment_articles",
            106: "segment_articles",
            107: "segment_articles",
            108: "segment_articles",
            109: "segment_articles",
            110: "previously_bought",
            111: "previously_bought",
            112: "previously_bought",
            113: "previously_bought",
            114: "previously_bought",
            115: "previously_bought_prod_name",
            116: "previously_bought_prod_name",
            117: "previously_bought_prod_name",
            118: "previously_bought_prod_name",
            119: "previously_bought_prod_name",
            120: "previously_bought_prod_name",
            121: "previously_bought_prod_name",
            122: "closest_image_embeddings",
            123: "closest_image_embeddings",
            124: "closest_image_embeddings",
            125: "closest_image_embeddings",
            126: "closest_image_embeddings",
            127: "closest_image_embeddings",
            128: "closest_image_embeddings",
            129: "closest_image_embeddings",
            130: "closest_image_embeddings",
            131: "closest_image_embeddings",
            132: "closest_image_embeddings",
            133: "closest_image_embeddings",
            134: "closest_image_embeddings",
            135: "closest_image_embeddings",
            136: "closest_image_embeddings",
            137: "closest_image_embeddings",
            138: "closest_image_embeddings",
            139: "closest_image_embeddings",
            140: "closest_image_embeddings",
            141: "closest_image_embeddings",
            142: "closest_text_embeddings",
            143: "closest_text_embeddings",
            144: "closest_text_embeddings",
            145: "closest_text_embeddings",
            146: "closest_text_embeddings",
            147: "closest_text_embeddings",
            148: "closest_text_embeddings",
            149: "closest_text_embeddings",
            150: "closest_text_embeddings",
            151: "closest_text_embeddings",
            152: "closest_text_embeddings",
            153: "closest_text_embeddings",
            154: "closest_text_embeddings",
            155: "closest_text_embeddings",
            156: "closest_text_embeddings",
            157: "closest_text_embeddings",
            158: "closest_text_embeddings",
            159: "closest_text_embeddings",
            160: "closest_text_embeddings",
            161: "closest_text_embeddings",
            162: "closest_text_embeddings",
            163: "closest_text_embeddings",
        },
    }
    df = pd.DataFrame(long_candidates_dict)
    return df


@pytest.fixture
def articles_dummy_df():
    articles_dict = {
        "article_id": {
            0: "0709746007",
            1: "0888113001",
            2: "0621372001",
            3: "0759597001",
            4: "0814213002",
        },
        "product_code": {0: 709746, 1: 888113, 2: 621372, 3: 759597, 4: 814213},
        "prod_name": {
            0: "Louie Heel",
            1: "Sushi trousers",
            2: "PE Aurora dress 2",
            3: "Nick muscle fit trs",
            4: "Princeton ss shirt (TVP)",
        },
        "product_type_no": {0: 90, 1: 272, 2: 265, 3: 272, 4: 259},
        "product_type_name": {
            0: "Pumps",
            1: "Trousers",
            2: "Dress",
            3: "Trousers",
            4: "Shirt",
        },
        "product_group_name": {
            0: "Shoes",
            1: "Garment Lower body",
            2: "Garment Full body",
            3: "Garment Lower body",
            4: "Garment Upper body",
        },
        "graphical_appearance_no": {
            0: 1010016,
            1: 1010016,
            2: 1010017,
            3: 1010016,
            4: 1010001,
        },
        "graphical_appearance_name": {
            0: "Solid",
            1: "Solid",
            2: "Stripe",
            3: "Solid",
            4: "All over pattern",
        },
        "colour_group_code": {0: 50, 1: 13, 2: 73, 3: 9, 4: 10},
        "colour_group_name": {
            0: "Other Pink",
            1: "Beige",
            2: "Dark Blue",
            3: "Black",
            4: "White",
        },
        "department_no": {0: 3528, 1: 1941, 2: 3080, 3: 8616, 4: 7657},
        "department_name": {
            0: "Heels",
            1: "Blouse & Dress",
            2: "Take Care External",
            3: "Trouser S&T",
            4: "Kids Boy Shirt",
        },
        "garment_group_no": {0: 1020, 1: 1010, 2: 1001, 3: 1009, 4: 1011},
        "garment_group_name": {
            0: "Shoes",
            1: "Blouses",
            2: "Unknown",
            3: "Trousers",
            4: "Shirts",
        },
    }
    df = pd.DataFrame(articles_dict)
    return df
